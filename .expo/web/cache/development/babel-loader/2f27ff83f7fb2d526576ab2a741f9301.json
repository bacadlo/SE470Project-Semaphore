{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ButtonBasics = function (_Component) {\n  _inherits(ButtonBasics, _Component);\n\n  var _super = _createSuper(ButtonBasics);\n\n  function ButtonBasics() {\n    _classCallCheck(this, ButtonBasics);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ButtonBasics, [{\n    key: \"fantasticButton\",\n    value: function fantasticButton() {\n      Alert.alert('You are feeling', 'Fantastic', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }]);\n    }\n  }, {\n    key: \"niceButton\",\n    value: function niceButton() {\n      Alert.alert('You are feeling:', 'Nice', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }]);\n    }\n  }, {\n    key: \"sorryButton\",\n    value: function sorryButton() {\n      Alert.alert('Your mood is:', 'Sorry', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }]);\n    }\n  }, {\n    key: \"forgiveButton\",\n    value: function forgiveButton() {\n      Alert.alert('Alert!', 'Forgive us.', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \" Click on an emoji that decribes how you are \"\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: this.fantasticButton,\n            children: _jsx(Image, {\n              source: require(\"./assets/fantastic.png\"),\n              style: styles.imageStyle\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: this.niceButton,\n            children: _jsx(Image, {\n              source: require(\"./assets/nice.png\"),\n              style: styles.imageStyle\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: this.sorryButton,\n            children: _jsx(Image, {\n              source: require(\"./assets/sorry.png\"),\n              style: styles.imageStyle\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: this.forgiveButton,\n            children: _jsx(Image, {\n              source: require(\"./assets/forgive.png\"),\n              style: styles.imageStyle\n            })\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return ButtonBasics;\n}(Component);\n\nexport { ButtonBasics as default };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 3\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  imageStyle: {\n    width: 50,\n    height: 50\n  },\n  button: {\n    margin: 10,\n    justifyContent: 'center'\n  },\n  text: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/Spring 22/SE 350 - Human Computer Interaction/Project 3/SurveyButton/App.js"],"names":["StatusBar","React","Component","ButtonBasics","Alert","alert","text","onPress","console","log","styles","container","buttonContainer","button","fantasticButton","require","imageStyle","niceButton","sorryButton","forgiveButton","StyleSheet","create","flexDirection","justifyContent","alignItems","flex","width","height","margin","textAlign"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport { StyleSheet, View, Alert, TouchableOpacity, Image } from 'react-native';\n\nexport default class ButtonBasics extends Component {\n  fantasticButton() {\n    Alert.alert('You are feeling', 'Fantastic', [\n      { text: 'OK', onPress: () => console.log('OK Pressed') },\n    ]);\n  }\n\n  niceButton() {\n    Alert.alert('You are feeling:', 'Nice', [\n      { text: 'OK', onPress: () => console.log('OK Pressed') },\n    ]);\n  }\n\n  sorryButton() {\n    Alert.alert('Your mood is:', 'Sorry', [\n      { text: 'OK', onPress: () => console.log('OK Pressed') },\n    ]);\n  }\n\n  forgiveButton() {\n    Alert.alert('Alert!', 'Forgive us.', [\n      { text: 'OK', onPress: () => console.log('OK Pressed') },\n    ]);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}> Click on an emoji that decribes how you are </Text> \n        <View style={styles.buttonContainer}>              \n        <TouchableOpacity style={styles.button} onPress={this.fantasticButton}>\n          <Image source={require('./assets/fantastic.png')} style={styles.imageStyle}/>            \n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={this.niceButton}>\n          <Image source={require('./assets/nice.png')} style={styles.imageStyle}/>            \n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={this.sorryButton}>\n          <Image source={require('./assets/sorry.png')} style={styles.imageStyle}/>           \n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={this.forgiveButton}>\n          <Image source={require('./assets/forgive.png')} style={styles.imageStyle}/>            \n        </TouchableOpacity>\n        <StatusBar style=\"auto\" />\n        </View>\n        \n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',   \n    justifyContent: 'center',\n    alignItems: 'center', \n    flex: 3   \n  },\n  buttonContainer: {\n    flexDirection: 'row'    \n  },  \n  imageStyle: {\n    width: 50,\n    height: 50\n  },\n  button:{\n    margin:10,\n    justifyContent: 'center'        \n  }, \n  text:{\n    textAlign:\"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}